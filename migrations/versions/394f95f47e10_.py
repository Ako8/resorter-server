"""empty message

Revision ID: 394f95f47e10
Revises: 
Create Date: 2024-01-26 00:26:21.588261

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '394f95f47e10'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('regions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('image', sa.String(), nullable=True),
    sa.Column('photos', sa.String(), nullable=True),
    sa.Column('video', sa.String(), nullable=True),
    sa.Column('article_one', sa.Text(), nullable=True),
    sa.Column('article_two', sa.Text(), nullable=True),
    sa.Column('article_three', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('types',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('icon', sa.String(), nullable=True),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('desc', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=20), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('password', sa.String(length=60), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username')
    )
    op.create_table('cars',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('image', sa.String(), nullable=True),
    sa.Column('images', sa.String(), nullable=True),
    sa.Column('gear_box', sa.String(), nullable=True),
    sa.Column('overview', sa.Text(), nullable=True),
    sa.Column('car_type', sa.String(), nullable=True),
    sa.Column('specifications', sa.String(), nullable=True),
    sa.Column('rent_price', sa.Float(), nullable=True),
    sa.Column('for_rent', sa.String(), nullable=True),
    sa.Column('owner_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['owner_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('flats',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('images', sa.String(), nullable=True),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('location', sa.String(), nullable=True),
    sa.Column('region_id', sa.Integer(), nullable=True),
    sa.Column('overview', sa.Text(), nullable=True),
    sa.Column('day_price', sa.Float(), nullable=True),
    sa.Column('map', sa.String(), nullable=True),
    sa.Column('flat_type_id', sa.Integer(), nullable=True),
    sa.Column('flat_owner_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['flat_owner_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['flat_type_id'], ['types.id'], ),
    sa.ForeignKeyConstraint(['region_id'], ['regions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('locations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('overview', sa.Text(), nullable=True),
    sa.Column('place_type', sa.String(), nullable=True),
    sa.Column('images', sa.String(), nullable=True),
    sa.Column('map', sa.String(), nullable=True),
    sa.Column('region_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['region_id'], ['regions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('flat-orders',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('phone', sa.String(), nullable=True),
    sa.Column('number_of_people', sa.Integer(), nullable=True),
    sa.Column('rent_date', sa.String(), nullable=True),
    sa.Column('unrent_date', sa.String(), nullable=True),
    sa.Column('customer_request', sa.Text(), nullable=True),
    sa.Column('flat_id', sa.Integer(), nullable=True),
    sa.Column('total_price', sa.Float(), nullable=True),
    sa.Column('host_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['flat_id'], ['flats.id'], ),
    sa.ForeignKeyConstraint(['host_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('orders',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('car_id', sa.Integer(), nullable=True),
    sa.Column('rent_date', sa.String(), nullable=True),
    sa.Column('unrent_date', sa.String(), nullable=True),
    sa.Column('pickup_city', sa.String(), nullable=True),
    sa.Column('drop_city', sa.String(), nullable=True),
    sa.Column('total_price', sa.Float(), nullable=True),
    sa.Column('host_id', sa.Integer(), nullable=True),
    sa.Column('customer_name', sa.String(), nullable=True),
    sa.Column('customer_email', sa.String(), nullable=True),
    sa.Column('customer_phone', sa.String(), nullable=True),
    sa.Column('customer_phone_op', sa.String(), nullable=True),
    sa.Column('customer_birthdate', sa.String(), nullable=True),
    sa.Column('customer_app', sa.String(), nullable=True),
    sa.Column('order_owner', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['car_id'], ['cars.id'], ),
    sa.ForeignKeyConstraint(['host_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_table('user')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('username', sa.VARCHAR(length=20), nullable=False),
    sa.Column('email', sa.VARCHAR(length=120), nullable=False),
    sa.Column('password', sa.VARCHAR(length=60), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username')
    )
    op.drop_table('orders')
    op.drop_table('flat-orders')
    op.drop_table('locations')
    op.drop_table('flats')
    op.drop_table('cars')
    op.drop_table('users')
    op.drop_table('types')
    op.drop_table('regions')
    # ### end Alembic commands ###
